evaluate(float x;)float {
  return(0);
}
evaluate(float x;)float {
  result=0.0;
  result=a*x+b;
  return(result);
}
evaluate(float x;)float {
  result=a;
  result=result*x+b;
  result=result*x+c;
  return(result);
}
build(float A; float B;)LINEAR {
  new_function.a=A;
  new_function.b=B;
  return(new_function);
}
build(float A; float B; float C;)QUADRATIC {
  new_function.a=A+B*3.1;
  new_function.b=B;
  new_function.c="string";
  return(1);
}
build2(float A; float B; float C;)QUADRATIC {
  new_function.a=A;
  new_function.b=B;
  new_function.c=C;
  return(new_function);
}
f(integer i;)void f(integer i;)void f(integer i; integer i;)integer f3(integer p1[2][3];)integer program{
  
  {
  f1=f1.build(2,3.5);
  f2=f2.build(-2.0,1.0,0.0);
  c.b=1;
  counter=c.f);
  undefined)
  counter=a;
  f(1,1,1)
  f(1.2,1)
  i[2]=1;
  i["hello"][1.3]=2;
  f3(j)
  counter.x=1;
  
}

}

