<START> ::= <prog>

<prog> ::= <classDeclList> <FuncDef> 'main' <funcBody>

------class

<classDeclList> ::= <classDecl> <classDeclList>
<classDeclList> ::= EPSILON
<classDecl> ::= 'class' 'id' <Inherit> '{' <ClassDeclBodyList> '}' ';'

--- <Inherit>

<Inherit> ::= 'inherits' 'id' <NestedId> 
<Inherit> ::= EPSILON 

<NestedId> ::= ',' 'id' <NestedId> 
<NestedId> ::= EPSILON

-- <ClassDeclBody>

<ClassDeclBodyList> ::= <ClassDeclBody> <ClassDeclBodyList>
<ClassDeclBodyList> ::= EPSILON
<ClassDeclBody> ::= <visibility> <memberDecl>

<visibility> ::= 'public' 
<visibility> ::= 'private' 
<visibility> ::= EPSILON 

-- <memberDecl>

<memberDecl> ::= <funcDecl> 
<memberDecl> ::= <varDecl>

------function list

<funcDecl> ::= 'func' 'id' '(' <fParams> ')' ':' <funcDeclTail> ';'

<FuncDef> ::= <Function> <FuncDef> 
<FuncDef> ::= EPSILON

------function

<Function> ::= <funcHead> <funcBody>

-------funcHead 

<funcHead> ::= 'func' 'id' <ClassMethod> '(' <fParams> ')' ':' <funcDeclTail>

<ClassMethod> ::= 'sr' 'id' 
<ClassMethod> ::= EPSILON 

<funcDeclTail> ::= <type> 
<funcDeclTail> ::= 'void' 

<fParams> ::= <fParam> <FParamsTail>
<fParams> ::= EPSILON

<fParam> ::= <type> 'id' <ArraySizeRept>

<ArraySizeRept> ::= '[' <IntNum> ']' <ArraySizeRept>
<ArraySizeRept> ::= EPSILON

<IntNum> ::= 'intLit'
<IntNum> ::= EPSILON

<FParamsTail> ::= ',' <fParam> <FParamsTail>
<FParamsTail> ::= EPSILON

-------funcBody

<funcBody> ::= '{' <MethodBodyVar> <StatementList> '}'

------ MethodBodyVar

<MethodBodyVar> ::= 'var' '{' <VarDeclRep> '}' 
<MethodBodyVar> ::= EPSILON 

<VarDeclRep> ::= <varDecl> <VarDeclRep>
<VarDeclRep> ::= EPSILON 

<varDecl> ::= <type> 'id' <ArraySizeRept> ';'

<type> ::= 'integer' 
<type> ::= 'float' 
<type> ::= 'string' 
<type> ::= 'id' 

------- <StatementList>

<StatementList> ::= <statement> <StatementList>
<StatementList> ::= EPSILON 

<statement> ::= <FuncOrAssignStat> ';'
<statement> ::= 'if' '(' <expr> ')' 'then' <statBlock> 'else' <statBlock> ';' 
<statement> ::= 'while' '(' <expr> ')' <statBlock> ';' 
<statement> ::= 'read' '(' <variable> ')' ';' 
<statement> ::= 'write' '(' <expr> ')' ';' 
<statement> ::= 'return' '(' <expr> ')' ';' 
<statement> ::= 'break' ';' 
<statement> ::= 'continue' ';' 

--- <statBlock>

<statBlock> ::= '{' <StatementList> '}' 
<statBlock> ::= <statement> 
<statBlock> ::= EPSILON 

---- variable

<variable> ::= 'id' <VariableIdnest> 
<VariableIdnest> ::= <IndiceRep> <VariableIdnestTail> 
<VariableIdnestTail> ::= '.' 'id' <VariableIdnest> 
<VariableIdnestTail> ::= EPSILON 

<IndiceRep> ::= '[' <expr> ']' <IndiceRep> 
<IndiceRep> ::= EPSILON 

------ expr

<expr> ::= <arithExpr> <exprTail> 
<exprTail> ::= <relOp> <arithExpr> 
<exprTail> ::= EPSILON 

<arithExpr> ::= <term> <arithExprTail>
<arithExprTail>::= <addOp> <term> <arithExprTail>
<arithExprTail>::= EPSILON

<addOp> ::= '+' 
<addOp> ::= '-' 
<addOp> ::= 'or' 

<relOp> ::= 'eq' 
<relOp> ::= 'neq' 
<relOp> ::= 'lt' 
<relOp> ::= 'gt' 
<relOp> ::= 'leq' 
<relOp> ::= 'geq' 

<FuncOrAssignStat> ::= 'id' <FuncOrAssignStatIdnest> 

<FuncOrAssignStatIdnest> ::= <IndiceRep> <FuncOrAssignStatIdnestVarTail> 
<FuncOrAssignStatIdnest> ::= '(' <aParams> ')' <FuncOrAssignStatIdnestFuncTail> 

<FuncOrAssignStatIdnestVarTail> ::= '.' 'id' <FuncOrAssignStatIdnest> 
<FuncOrAssignStatIdnestVarTail> ::= <AssignStatTail>

<AssignStatTail> ::= <assignOp> <expr>
<assignOp> ::= '=' 

<FuncOrAssignStatIdnestFuncTail> ::= '.' 'id' <FuncStatTail> 
<FuncOrAssignStatIdnestFuncTail> ::= EPSILON

<FuncStatTail> ::= <IndiceRep> '.' 'id' <FuncStatTail> 
<FuncStatTail> ::= '(' <aParams> ')' <FuncStatTailIdnest> 

<FuncStatTailIdnest> ::= '.' 'id' <FuncStatTail> 
<FuncStatTailIdnest> ::= EPSILON

---- aParams>

<aParams> ::= <expr> <aParamsTail> 
<aParams> ::= EPSILON 
<aParamsTail> ::= ',' <expr> <aParamsTail> 
<aParamsTail> ::= EPSILON

------ term 

<term> ::= <factor> <termTail>
<termTail> ::= EPSILON 
<termTail> ::= <multOp> <factor> <termTail>

<multOp> ::= '*' 
<multOp> ::= '/' 
<multOp> ::= 'and'

---- factor 

<factor> ::= <FuncOrVar>
<factor> ::= 'intLit' 
<factor> ::= 'floatLit' 
<factor> ::= 'stringLit' 
<factor> ::= '(' <expr> ')' 
<factor> ::= 'not' <factor> 
<factor> ::= <sign> <factor> 
<factor> ::= 'qm' '[' <expr> ':' <expr> ':' <expr> ']' 

<FuncOrVar>  ::= 'id' <FuncOrVarIdnest> 

<FuncOrVarIdnest> ::= <IndiceRep> <FuncOrVarIdnestTail> 
<FuncOrVarIdnest> ::= '(' <aParams> ')' <FuncOrVarIdnestTail> 

<FuncOrVarIdnestTail> ::= '.' 'id' <FuncOrVarIdnest> 
<FuncOrVarIdnestTail> ::= EPSILON

<sign> ::= '+' 
<sign> ::= '-' 
